{"version":3,"sources":["actions.js","reducers/appReducer.js","reducers/index.js","sagas/index.js","store.js","components/Sidebar.js","components/DynamicImage.js","components/TeamTable.js","components/ConferenceTable.js","helpers.js","components/DataTable.js","components/TeamsPage.js","components/ConferencesPage.js","App.js","serviceWorker.js","index.js"],"names":["LOAD_DATA_ACTION","loadDataAction","entity","type","payload","loadDataSuccessAction","data","defaultState","teams","teamsLoaded","conferences","filters","offset","perPage","appReducer","state","combineReducers","app","loadDataSaga","rootSaga","api_entity_urls","getDataFromAPI","fetch","call","request","result","put","takeEvery","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","sagas","Sidebar","className","to","DynamicImage","src","alt","useState","display","setDisplay","style","onLoad","TeamTable","setFilter","options","useSelector","value","label","concat","map","c","name","placeholder","onChange","e","conference","scope","row","index","logos","key","logo","abbreviation","school","mascot","division","ConferenceTable","short_name","filterData","doFilter","field","re","RegExp","createRegexp","filter","item","match","Object","entries","Components","DataTable","dispatch","useDispatch","filteredData","paginatedData","slice","paginateData","pageCount","length","TableComponent","setFiltersAction","previousLabel","nextLabel","breakLabel","breakClassName","breakLinkClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","Math","ceil","setOffsetAction","containerClassName","pageClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","pageLinkClassName","target","setPerPageAction","TeamsPage","useEffect","ConferencesPage","App","basename","Container","path","component","exact","render","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9e8bd9a.chunk.js","sourcesContent":["export const LOAD_DATA_ACTION = 'LOAD_DATA_ACTION';\r\nexport const LOAD_DATA_ACTION_SUCCESS = 'LOAD_DATA_ACTION_SUCCESS';\r\nexport const SET_OFFSET = 'SET_OFFSET';\r\nexport const SET_FILTERS = 'SET_FILTERS';\r\nexport const SET_PER_PAGE = 'SET_PER_PAGE';\r\n\r\nexport const loadDataAction = (entity) => ({\r\n  type: LOAD_DATA_ACTION,\r\n  payload: {\r\n    entity,\r\n  },\r\n});\r\n\r\nexport const loadDataSuccessAction = (data) => ({\r\n  type: LOAD_DATA_ACTION_SUCCESS,\r\n  payload: {\r\n    ...data,\r\n  },\r\n});\r\n\r\nexport const setFiltersAction = (filters) => ({\r\n  type: SET_FILTERS,\r\n  payload: {\r\n    filters,\r\n  },\r\n});\r\n\r\nexport const setOffsetAction = (offset) => ({\r\n  type: SET_OFFSET,\r\n  payload: {\r\n    offset,\r\n  },\r\n});\r\n\r\nexport const setPerPageAction = (perPage) => ({\r\n  type: SET_PER_PAGE,\r\n  payload: {\r\n    perPage,\r\n  },\r\n});\r\n","import {\r\n  LOAD_DATA_ACTION_SUCCESS,\r\n  SET_OFFSET,\r\n  SET_FILTERS,\r\n  SET_PER_PAGE\r\n} from '../actions';\r\n\r\nconst defaultState = {\r\n  teams: [],\r\n  teamsLoaded: false,\r\n  conferences: [],\r\n  filters: {},\r\n  offset: 0,\r\n  perPage: 10,\r\n};\r\n\r\nconst appReducer = (state = defaultState, { type, payload }) => {\r\n  switch (type) {\r\n    case LOAD_DATA_ACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        offset: 0,\r\n        filters: {},\r\n      };\r\n\r\n    case SET_OFFSET: {\r\n      return {\r\n        ...state,\r\n        offset: payload.offset,\r\n      }\r\n    }\r\n    case SET_FILTERS: {\r\n      return {\r\n        ...state,\r\n        filters: payload.filters,\r\n        offset: 0,\r\n      }\r\n    }\r\n    case SET_PER_PAGE: {\r\n      return {\r\n        ...state,\r\n        perPage: payload.perPage,\r\n        offset: 0,\r\n      }      \r\n    }    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default appReducer;","import { combineReducers } from 'redux';\r\nimport appReducer from './appReducer';\r\n\r\nexport default combineReducers({\r\n  app: appReducer,\r\n});","import { takeEvery, call, put } from 'redux-saga/effects';\r\nimport { LOAD_DATA_ACTION, loadDataSuccessAction } from '../actions';\r\n\r\nconst API = 'https://api.collegefootballdata.com';\r\n\r\n// decouple external API specifics from our entity naming\r\nconst api_entity_urls = {\r\n  \"teams\" : \"/teams\",\r\n  \"conferences\": \"/conferences\"\r\n}\r\n\r\nconst getDataFromAPI = (entity) => {\r\n    return fetch(API + api_entity_urls[entity]);\r\n}\r\n\r\nfunction* loadDataSaga({ payload }) {\r\n  const request = yield call(getDataFromAPI, payload.entity);\r\n  const result = yield call([request, 'json']);\r\n\r\n  const data = {};\r\n  data[payload.entity] = result;\r\n\r\n  yield put(loadDataSuccessAction(data));\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield takeEvery(LOAD_DATA_ACTION, loadDataSaga);\r\n}\r\n\r\nexport default rootSaga;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancer(applyMiddleware(sagaMiddleware)),\r\n);\r\nsagaMiddleware.run(sagas);\r\n\r\nexport default store;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 className=\"display-4 mb-3\">College Football</h1>\r\n      </header>\r\n      <div>\r\n        <ul className=\"nav flex-column\">\r\n          <li className=\"nav-item\"><NavLink to=\"/teams\" className=\"nav-link\">Teams</NavLink></li>\r\n          <li className=\"nav-item\"><NavLink to=\"/conferences\" className=\"nav-link\">Conferences</NavLink></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Sidebar;","import React, { useState }  from 'react';\r\n\r\nconst DynamicImage = ({\r\n  src,\r\n  alt = '',\r\n}) => {\r\n  const [display, setDisplay] = useState(\"none\");\r\n\r\n  return (\r\n    <img \r\n    src={src} \r\n    alt={alt} \r\n    style={{display: display}} \r\n    onLoad={()=>{setDisplay(\"block\")}} />\r\n  );\r\n}\r\n\r\nexport default DynamicImage;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport DynamicImage from './DynamicImage';\r\n\r\nconst TeamTable = ({ data, setFilter }) => {\r\n  const logo = (data) => {\r\n    return (\r\n      data.logos !== null\r\n        ? <DynamicImage src={data.logos[0]} alt=\"Logo\" key={data.logos[0]} />\r\n        : \"\"\r\n    )\r\n  }\r\n\r\n  const options = useSelector(state => [{value: \"\", label: \"All\"}].concat(state.app['conferences'].map(c => { return {value: c.name, label: c.name} })));\r\n\r\n  const handleChange = (e) => {\r\n    setFilter({ conference:  e.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n      <h3 className=\"display-5 p-3 col-md-8\">Teams</h3>\r\n      <Select className=\"col-md-4 p-3\" options={options} placeholder=\"Conference\" onChange={handleChange} />\r\n      </div>\r\n      <table className=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n        <th className=\"Table-logo\">&nbsp;</th>\r\n        <th scope=\"col\">Abbr.</th>\r\n        <th scope=\"col\">School</th>\r\n        <th scope=\"col\">Mascot</th>\r\n        <th scope=\"col\">Division</th>\r\n        <th scope=\"col\">Conference</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      {\r\n        data.map((row, index) =>\r\n          <tr>\r\n            <td className=\"Table-logo\">{logo(row)}</td>\r\n            <td>{row.abbreviation}</td>\r\n            <td>{row.school}</td>\r\n            <td>{row.mascot}</td>\r\n            <td>{row.division}</td>\r\n            <td>{row.conference}</td>\r\n          </tr>\r\n        )\r\n      }\r\n      </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TeamTable;\r\n","import React from 'react';\r\n\r\nconst ConferenceTable = ({ data }) => {\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n      <h3 className=\"display-5 p-3\">Conferences</h3>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Abbr.</th>\r\n            <th scope=\"col\">Short name</th>\r\n            <th scope=\"col\">name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) =>\r\n            <tr>\r\n              <td>{row.abbreviation}</td>\r\n              <td>{row.short_name}</td>\r\n              <td>{row.name}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConferenceTable;\r\n","export const paginateData = (data, offset, perPage) => {\r\n  return data.slice(offset, offset + perPage);\r\n}\r\n  \r\nexport const filterData = (data, filters) => {\r\n  const createRegexp = (value) => { return new RegExp('^' + value, 'i') };\r\n  const doFilter = (data, field, value) => { \r\n    var re = createRegexp(value);\r\n    return data.filter(function(item){\r\n      if(item[field]){\r\n        return item[field].match(re);\r\n      }else{\r\n        return false;\r\n      }\r\n    })\r\n  };\r\n\r\n  for (const [field, value] of Object.entries(filters)) {\r\n    if(!value){\r\n      continue;\r\n    }\r\n\r\n    data = doFilter(data, field, value)\r\n  }\r\n  return data;\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TeamTable from './TeamTable';\r\nimport ConferenceTable from './ConferenceTable';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { setOffsetAction, setFiltersAction, setPerPageAction } from '../actions';\r\nimport { filterData, paginateData } from '../helpers';\r\n\r\nconst Components = {\r\n  teams: TeamTable,\r\n  conferences: ConferenceTable,\r\n}\r\n\r\nconst DataTable = ({ entity }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const data = useSelector(state => state.app[entity]);\r\n  const filters = useSelector(state => state.app.filters);\r\n  const offset = useSelector(state => state.app.offset);\r\n  const perPage = useSelector(state => state.app.perPage);\r\n\r\n  const filteredData = filterData(data, filters);\r\n  const paginatedData = paginateData(filteredData, offset, perPage);\r\n  const pageCount = filteredData.length / perPage;\r\n\r\n  const TableComponent = Components[entity];\r\n\r\n  const handlePageClick = data => {\r\n    let selected = data.selected;\r\n    let offset = Math.ceil(selected * perPage);\r\n    dispatch(setOffsetAction(offset));\r\n  };\r\n\r\n  return (\r\n      <>\r\n        <TableComponent data={paginatedData} setFilter={(filters) => dispatch(setFiltersAction(filters))}/>\r\n        <div className=\"row\">\r\n        <div className=\"col-sm-9 flex-column\">\r\n        <nav>\r\n          <ReactPaginate\r\n            previousLabel={'<'}\r\n            nextLabel={'>'}\r\n            breakLabel={'...'}\r\n            breakClassName={'page-item'}\r\n            breakLinkClassName={'page-link'}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={'pagination'}\r\n            pageClassName={'page-item'}\r\n            previousClassName={'page-item'}\r\n            previousLinkClassName={'page-link'}\r\n            nextClassName={'page-item'}\r\n            nextLinkClassName={'page-link'}\r\n            activeClassName={'active'}\r\n            pageLinkClassName={'page-link'}\r\n          />\r\n        </nav>\r\n        </div>\r\n        <div className=\"col-sm-3\">\r\n        <form className=\"form-inline\">\r\n          <div className=\"form-group\">\r\n            <label className=\"mr-3\">Per page </label>\r\n            <select className=\"form-control\" value={perPage} onChange={({ target }) => dispatch(setPerPageAction(target.value * 1))}>\r\n              <option value={3}>3</option>\r\n              <option value={5}>5</option>\r\n              <option value={10}>10</option>\r\n              <option value={20}>20</option>\r\n            </select>\r\n          </div>\r\n        </form>\r\n        </div>\r\n        </div>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default DataTable;","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loadDataAction } from '../actions';\r\nimport DataTable from './DataTable';\r\n\r\nconst TeamsPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadDataAction('teams'));\r\n    dispatch(loadDataAction('conferences'));\r\n  }, []);\r\n\r\n  return (\r\n    <DataTable entity=\"teams\" />\r\n  )\r\n}\r\n\r\nexport default TeamsPage;","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loadDataAction } from '../actions';\r\nimport DataTable from './DataTable';\r\n\r\nconst ConferencesPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadDataAction('conferences'));\r\n  }, []);\r\n\r\n  return (\r\n    <DataTable entity=\"conferences\" />\r\n  )\r\n}\r\n\r\nexport default ConferencesPage;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Container from \"react-bootstrap/Container\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport store from './store';\nimport Sidebar from './components/Sidebar';\nimport TeamsPage from './components/TeamsPage';\nimport ConferencesPage from './components/ConferencesPage';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <BrowserRouter basename=\"/college-football\">\n      <Container className=\"p-3\">\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <Sidebar />\n        </div>\n        <div className=\"col-md-8\">\n          <Switch>\n          <Route path=\"/teams\" component={TeamsPage} />\n          <Route path=\"/conferences\" component={ConferencesPage} />\n\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/teams\"/>\n          )}/>\n          </Switch>\n        </div>\n      </div>\n      </Container>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}